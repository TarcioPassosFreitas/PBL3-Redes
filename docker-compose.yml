version: '3.8'

services:
  # Blockchain local (Ganache)
  ganache:
    image: trufflesuite/ganache:v7.7.7
    container_name: ev-charging-ganache
    command:
      - --chain.hardfork=merge
      - --wallet.totalAccounts=10
      - --wallet.defaultBalance=1000
      - --miner.blockGasLimit=12000000
      - --server.host=0.0.0.0
      - --server.port=8545
    ports:
      - "8545:8545"
    networks:
      - ev-charging-net

  # Cache e Rate Limiting (Redis)
  redis:
    image: redis:7
    container_name: ev-charging-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ev-charging-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Cache/√çndice (PostgreSQL)
  postgres:
    image: postgres:15
    container_name: ev-charging-postgres
    environment:
      POSTGRES_USER: evcharging
      POSTGRES_PASSWORD: Tqp35ktFlHnfLhJgA21k2JkKEaPXmExrbMXKxTeWzl0=
      POSTGRES_DB: evcharging
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ev-charging-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evcharging"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API Flask
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ev-charging-api
    environment:
      - DB_URL=postgresql://evcharging:Tqp35ktFlHnfLhJgA21k2JkKEaPXmExrbMXKxTeWzl0=@postgres:5432/evcharging
      - REDIS_URL=redis://redis:6379/0
      - BLOCKCHAIN_URL=http://ganache:8545
      - BLOCKCHAIN_CONTRACT_ADDRESS=0x1234567890123456789012345678901234567890
      - API_DEBUG=${API_DEBUG:-false}
      - API_SECRET_KEY=${API_SECRET_KEY:-dev-secret-key}
      - API_JWT_SECRET=${API_JWT_SECRET:-dev-jwt-secret}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/venv
      - /app/__pycache__
      - /app/.pytest_cache
    depends_on:
      ganache:
        condition: service_started
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - ev-charging-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ev-charging-net:
    driver: bridge

volumes:
  redis_data:
  postgres_data: 